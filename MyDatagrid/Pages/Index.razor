@page "/"

<PageTitle>Index</PageTitle>

<h1>Hello, world!</h1>

Welcome to your new app.
<br />
<br />

<DataGridComponent @ref="Grid" TItem="Employee" Columns="columnDefinition" DataItems="listEmployees" Paging="@(new PagingConfig{
Enabled=true,
CustomPager=true,
PageSize=12
  })">
    <CustomPager>
        <button class="btn btn-primary" @onclick="GoToPrev">Previous</button>
        <span style="font-size:12px; color:gray">
            &nbsp;&nbsp;<b>Page</b>
            <input type="number" min="1" max="@Grid.MaxPageNumber" @bind-value="Grid.CurrentPageNumber" />of @Grid.MaxPageNumber &nbsp;&nbsp;
        </span>
        <button class="btn btn-primary" @onclick="GoToNext">Next</button>
    </CustomPager>

</DataGridComponent>
@code {
    protected override void OnInitialized()
    {
        base.OnInitialized();
        Initilize();
    }
    public DataGridComponent<Employee> Grid;
    private List<Employee>? listEmployees;
    private List<ColumnDefinition>? columnDefinition;
    public class Employee
    {
        public string? Name { get; set; }
        public string? Title { get; set; }
        public string? Department { get; set; }
        public int Salary { get; set; }
        public DateTime EmploymentDate { get; set; }

    }

    private void GoToPrev()
    {
        Grid.GoToPrevPage();
    }
    private void GoToNext()
    {
        Grid.GoToNextPage();
    }
    private void Initilize()
    {
        if (columnDefinition == null)
        {
            columnDefinition = new();
            columnDefinition.AddRange(new ColumnDefinition[]
            {
                new ColumnDefinition{Datafield="Name",Caption="Name",SortDirection=SortDirection.Asc},
                new ColumnDefinition{Datafield="Title",Caption="Title"},
                new ColumnDefinition{Datafield="Department",Caption="Department"},
                new ColumnDefinition{Datafield="EmploymentDate",Caption="Employment Date",Format="dd-MM-yyyy",DataType=DataType.DateTime},
                new ColumnDefinition{Datafield="Salary",Caption="Annula Salary",DataType=DataType.Currency,Alignment=Alignment.Right,Format="c"},
            });

        }
        if (listEmployees == null)
        {
            listEmployees = new();
            listEmployees.AddRange(new List<Employee>()
            {
                new Employee{Name="Gail Ericson",Title="DBA",Department="IT",Salary=100009,EmploymentDate=DateTime.Now},
                new Employee{Name="Rob Walters",Title="Developer",Department="Software Dev",EmploymentDate=DateTime.Now,Salary=100008},
                new Employee{Name="Ken Sanchez",Title="QA",Department="QA",EmploymentDate=DateTime.Now,Salary=100007},
                new Employee{Name="Lawrence Ebansa",Title="DBA",Department="IT",EmploymentDate=DateTime.Now,Salary=100006},
                new Employee{Name="Eric Anderson",Title="Developer",Department="Software Dev",EmploymentDate=DateTime.Now,Salary=100005},
                new Employee{Name="Joe Bath",Title="QA",Department="QA",EmploymentDate=DateTime.Now,Salary=100004},
                new Employee{Name="Jane Doey",Title="Developer",Department="Software Dev",EmploymentDate=DateTime.Now,Salary=100003},
                new Employee{Name="John Doe",Title="QA",Department="QA",EmploymentDate=DateTime.Now,Salary=100002},
                new Employee{Name="Tim Smith",Title="DBA",Department="IT",EmploymentDate=DateTime.Now,Salary=100001},
                new Employee{Name="Faye Mehai",Title="Developer",Department="Software Dev",EmploymentDate=DateTime.Now,Salary=100000},

            });
        }
    }
}